<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yoju360.mgmt.security.mapper.SysRoleMapper" >
  <resultMap id="BaseResultMap" type="com.yoju360.mgmt.security.model.SysRole" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="BIT" />
    <result column="obj_version" property="objVersion" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <trim prefix="and (" suffix=")" >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </trim>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, code, title, description, status, create_time, created_by, is_deleted, obj_version, 
    update_time, updated_by
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yoju360.mgmt.security.model.SysRoleExample" >
    select
    <if test="example !=null and example.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_role where is_deleted = false 
    <if test="example != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="get" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=BIGINT}
     and is_deleted = false 
  </select>
  <update id="deleteByExample" parameterType="com.yoju360.mgmt.security.model.SysRoleExample" >
    update sys_role set is_deleted = true 
    <if test="example != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="add" parameterType="com.yoju360.mgmt.security.model.SysRole" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        code,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="objVersion != null" >
        obj_version,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updatedBy != null" >
        updated_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="objVersion != null" >
        #{objVersion,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExample" parameterType="map" >
    update sys_role
    set id = #{record.id,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=BIT},
      obj_version =  obj_version + 1 ,
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR}
    <if test="example != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="update" parameterType="com.yoju360.mgmt.security.model.SysRole" >
    update sys_role
    set code = #{code,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      obj_version =  obj_version + 1 ,
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="count" resultType="java.lang.Integer" >
    select count(*) from sys_role where is_deleted = false
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from sys_role where is_deleted = false
  </select>
  <select id="selectByPage" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from sys_role where is_deleted = false
     limit #{start},#{count} 
  </select>
  <select id="selectByExamplePage" resultMap="BaseResultMap" parameterType="map" >
    select * from (select 
    <if test="example.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_role where is_deleted = false 
    <if test="example.oredCriteria != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
    ) a limit #{start},#{count} 
  </select>
  <update id="delete" parameterType="java.lang.Long" >
    update sys_role
    set is_deleted = true where is_deleted = false and id = #{_parameter}
  </update>
  <select id="countByExample" parameterType="map" resultType="java.lang.Integer" >
    select count(*) from sys_role where is_deleted = false 
    <if test="example != null and example.oredCriteria != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="isUniqueAmongOthers" parameterType="map" resultType="java.lang.Boolean" >
    select count(1) <![CDATA[ <= ]]> 0 from sys_role where ${columnName} = #{value} and is_deleted = false 
    <if test="id != null" >
       and id != #{id}
    </if>
  </select>
  
  <select id="findByUsername" parameterType="java.lang.String" resultMap="BaseResultMap" >
    select r.id, r.title, r.code, r.description, r.status
     from sys_role r,sys_user_role m, sys_user u 
     where r.is_deleted= false and m.is_deleted = false and u.is_deleted=false 
     and r.id=m.role_id and m.user_id=u.id and u.username = #{_parameter}
  </select>

  <select id="findByUserId" parameterType="map" resultMap="BaseResultMap" >
    select r.id, r.title, r.code, r.description, r.status
     from sys_role r,sys_user_role m, sys_user u 
     where r.is_deleted= false and m.is_deleted = false and u.is_deleted=false 
     and r.id=m.role_id and m.user_id=u.id and u.id = #{userId} and r.status = #{status}
  </select>
  
  <select id="findByUrl" parameterType="map" resultMap="BaseResultMap" >
    select r.id, r.title, r.code, r.description, r.status
     from sys_role r,sys_role_resource m, sys_resource u 
     where r.is_deleted= false and m.is_deleted = false and u.is_deleted=false 
     and r.id=m.role_id and m.resource_id=u.id and u.url = #{url} and r.status = #{status}
  </select>
</mapper>